Vectors Worksheet

Q1(a)
when iam playing cs2 and we are using grenades in game, the game has to calculate all the vectors that will influence the grenade's trajectory. for example if the player is running forward that adds an extra forward vector to the grenade's vector, if the player jumps it will increase the upward vector of the grenade.

Q1(b)
gravity is a constant force that draws an object toward the centre of any celestial bodies. the standard magnitude given for earth's gravity is 9.807m/s. 

Q1(c)
no the gravity vector is constantly changing. assuming that the origin is the centre of the planet, the gravity vector acting upon mario would look like this : the tail of the vector on mario and head of the vector on the centre of the planet. thus when mario runs around the planet the tail of the vector will constantly be changing thus the vector wont be the same for all the positions on the surface of the planet.

Matrices Worksheet

Q4(i)
line 27 getting MeshFilter component and setting it to the meshFilter variable
line 28 setting the originalMesh variable to the shared mesh filter which is the actual mesh asset so all changes to the mesh will affect all objects that use that mesh as a reference. 
line 29 setting the clonedMesh variable as a new mesh. 
line 30 setting the mesh in the cloneMesh variable to have the name of clone
line 31-35 setting all the varibles in cloneMesh to be the same as the originalMesh
line 37 setting all the vertices in the clonedMesh into the vertices array
line 38 setting all the triangles in the cloneMesh into the triangles array  

Q4(ii)
if you dont use clonedMesh any changes you make the original mesh will affect unity's default mesh because in line 28 we set the original mesh to equal to the shared mesh of the mesh filter.

REFLECTION

Q6(a)
while doing the matrices worksheet i feel like the most difficult part of it was understanding what i was suppose to code. spceifically for the SetTranslationMatrix and SetRotationMat functions, at first i didnt know what i was doing or what i was suppose to be doing. with the help of my classmates and mr douglas's comments, i found out that the function was suppose to set the translation and rotation matrix for the matrix fed into them. then i looked at the slides to figure out what these matrices are suppose to look like and found them on slide 5 of the matrices part 2 deck of slides. Using that and a bit of the wikipedia page for each of these matrices i managed to do complete the functions. i also had a hard time with the math behind matrices everytime i look at the slides the formulas look very daunting and i just get lost in all the algebra, numbers, and fractions, luckily my friends help me by explaining it to me step by step. (176 words)

Q6(b)
matrix concatenation. matrix concatenation is when you have a bunch of matrices you want to use to transform an object. instead of multiplying each vertex a bunch of times by all the matrices, you multiply all the matrices in order of first to last, right to left. this will give you one matrix that will perfrom all the transformations in 1 multiplication. where i got confused was why the matrices needed to be in order, if you pitch an airplane 90 degrees down then roll the plane 90 degrees left it would be the same as doing it backwards. But after looking at slide 50 and 54 of the worksheet in the matrix part 2 deck of slides and doing some roatation using my hands, i realised i was confusing local transform and world transform. because in world transform when you rotate an object the axes do not rotate with the object, so the sequence of rotations do matter. is this the reason matrices are not commutative? (167 words)

Q6(c)
overall this worksheet has been very helpful in understanding matrices, it may just be me but i only really understood matrices when i started doing the worksheets. during class i would listen and be kinda confused about whats going on on the slides, i would kind of understand what mr douglas is saying but it is only when i started doing the worksheets, i truly understood the topic. not just the matrices worksheet i feel the same for the vectors one as well. i especially liked the questions where the code was blanked out and a hint was given, the hints helped me understand what each line of code i am writing in the function is suppose to do, yet i had to have the knowledge to complete the code myself. this was especially effective in helping me understand the code as i am both writing it myself and am knowing what the intended purpose of the code is, so i know if the code is correct or wrong. although i see the vector one relating more to game development i still dont understand how matrices are related (something about computer graphics) to it as it feels like i would never need to transform an object like this unless iam doing low-level coding. (213 words)

Dynamics & Kinematics worksheet 

Part 1 
Yes it does follow Newton's First Law of motion because the object is moving at a constant speed and not accelerating or decelerating since there are no more forces acting upon it 

Reflection

(a)
The most difficult part of this worksheet i feel is the coding part although most of the code has been handfed to us it took me really long to understand what each line of code is suppose to do and therefore i dont know what iam suppose to write. there isnt really a way to overcome this, i just read the instructions and try to visualise what each line of code before it is doing to understand what i need to do in my code. i think i would have really prefered it if we just had one question but we had to code everything by ourselves, when given the code i often find myself comparing the length of the blanked out part to my own code to see if i got it right. because of this i might've missed out on a few ways to shorten the code. but i dont think this is feasible as there is more then 1 topic to teach and understand. 

(b)
i will be trying to explain the conservation of angular momentum for my reflection. so to start what is angular momentum, angular momentum is defined as the product of the moment of inertia and angular velocity of an object. or in laymans terms how much "spinning energy" it has. 

angular momentum can be experienced by objects in 2 situations, either a point object, which is an object that orbits around a fixed point, for example the earth around the sun. 

where we use the formula L = r * p, 
where,
L is the angular momentum 
r is the radius of the circle created by the fixed point's rotation path.
p is the linear momentum (refer to slide 14 for linear momentum formula)

or a extended object, which is rotating about a fixed point, for example the earth rotating about its own axis. 

where we use the formula L = I * ω
where
L is the angular momentum 
I is the moment of inertia 
ω is the angular velocity 

we also need to know the direction of this momentum, for that we use the right hand rule. use your right hand and make a thumbs up sign and line up the direction your fingers are pointing to the direction the object is rotating. the thumb will be pointing in the direction of the angular momentum. or for people who love to make life hard, a clockwise direction of rotation will result in an angular momentum pointing up along the axis upon which it is rotating. and a counter-clockwise direction of rotation will result in an angular momentum pointing down along the axis upong which it is rotating. 

so what is conservation of angular momentum. Conservation of angular momentum is a physical property of a spinning system such that its spin remains constant unless it is acted upon by an external torque. to put it simply the angular momentum of something spinning will not change as long as it is not being affected by a external force. 

how can we see it in action? ive got an examples.

the classic ice skater example : an ice skater will start off their spin with arms stretched out and when they pull their arms in their angular velocity or the rate at which they spin increases. (watch this video to see it in action https://www.youtube.com/shorts/VmeM0BNnGR0?feature=share)

why does this happen? conservation of angular momentum. 

if we assume the ice skater has a wingspan of 1.4m and the radius of her body is 0.3m when arms are tucked in and has a mass of 70kg. and they spin at 5 radians per second with their arms stretched out, we can calculate the angular momentum. (moment of inertia formulas are different for different objects and there is no formula for an irregular object like a human body so i will be using the cylinder moment of inertia formula I = 1/2 * m * r^2. this will not change the fundemental concept behind this example) 

calculate the moment of inertia of the human with her arms stretched out
I = 1/2 * m * r^2
I = 1/2 * 70kg * 0.7m^2 
I = 17.15kgm^2

calculate angular momentum 
L = I * ω
L = 17.15kgm^2 * 5 rad/s 
L = 85.75kgm^2/s

then we calculate the moment of inertia of the human with her arms tucked in 
I = 1/2 * m * r^2
I = 1/2 * 70kg 0.15m^2
I = 5.25kgm^2 

because the angular momentum should never change we use it together with our new inertia to calculate the speed at which the human will spin with her arms tucked in 
L = I * ω
85.75kgm^2/s = 5.25kgm^2 * ω
ω = 85.75kgm^2/s / 5.25kgm^2
ω ≈ 15.53442 rad/s

so we can see because of the conservation of angular momentum when the ice skater tucks their arm in decreasing the moment of inertia, the angular velocity has to increase, resulting in them spinning faster.

References
Bozeman Science. (2014, September 28). Angular momentum. YouTube. https://www.youtube.com/watch?v=MULe4xv3lVk&amp;t=348s&amp;ab_channel=BozemanScience 
BYJU’S. (n.d.). Angular momentum - definition, units, formula, video, Right hand rule, examples and faqs. BYJUS. https://byjus.com/physics/angular-momentum/ 
INDIUMcorporation. (2013, January 29). Figure skating - conservation of angular momentum. YouTube. https://www.youtube.com/shorts/VmeM0BNnGR0 
Wikimedia Foundation. (2023a, October 28). Moment of inertia. Wikipedia. https://en.wikipedia.org/wiki/Moment_of_inertia 
Wikimedia Foundation. (2023b, November 8). Angular momentum. Wikipedia. https://en.wikipedia.org/wiki/Angular_momentum 

(c)
overall this worksheet has been good as a refresher for physics. although the coding part of the worksheet was abit demotivating as i spent more time trying to piece together what line of code is suppose to do what then the actual coding itself. for the physics part of the worksheet, i believe it did help me refresh my memories for physics. the examples were relevant and i understood the physics concpet behind all of the questions. I feel that it would be better if we had more example questions and although i enjoy playing in the unity game engine to understand physics i feel like a normal physics worksheet with just physics questions would be a good complement to this. so like maybe a physics question where we have to do the calculations on pen and paper, then we go into unity and do the same to visualise the results. physics relates to game development on fundamental level although unity does most of the physics calculations behind the scenes for us nowadays.i believe it is still good to have an understanding of how basic physics as no matter how much you try to run from it, every game will involve physics one way or another. 

COLLISIONS WORKSHEET

Q3(b)
this if statement basically checks if the ball is moving left or right a positive speedX would mean the ball is moving right and thus if a collision is detected on the x-axis walls it had to be with the right wall so on the frame we detect the collision we set the xpos to the rightwall - walloffset - ball radius to keep the ball within the playing field when ball speeds are high.

Q3(c)
basically what is happening is that you are defining the positions of the top, bottom, left and right of the ball before moving the ball, this will result in the collision detection being delayed. that is why you can see the ball going into the wall when colliding. the teleportation of the ball to the opposite wall is caused by the delay as well because the ball was allowed to travel into the wall and the position used to check for collisions is delayed this will result in collision being detected after changing the course of the ball and flipping the speed, causing the code to think the ball has collided with the opposite wall and "teleporting" it to the opposite wall to account for the collision before the transform.translate() in the fixed update moves it back to the correct position. this can be easily fixed by defining the position of the ball after moving the ball or if the ball is symmetrical simply add or minus the radius whereever neccessary. 



